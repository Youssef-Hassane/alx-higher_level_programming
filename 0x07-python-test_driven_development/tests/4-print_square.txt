Import module:
    >>> print_square = __import__('4-print_square').print_square

Test with zero size:
    >>> print_square(0)

Test with size one:
    >>> print_square(1)
    #

Test with size two:
    >>> print_square(2)
    ##
    ##

Test with size three:
    >>> print_square(3)
    ###
    ###
    ###

Test with size ten:
    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

Test with negative size:
    >>> print_square(-10)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0

Test with floating-point size:
    >>> print_square(10.0)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test with string as size:
    >>> print_square("foo")
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test with None as size:
    >>> print_square(None)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test with infinity as size:
    >>> print_square(float('inf'))
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test with NaN as size:
    >>> print_square(float('nan'))
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test missing size argument:
    >>> print_square()
    Traceback (most recent call last):
    ...
    TypeError: print_square() missing 1 required positional argument: 'size'
